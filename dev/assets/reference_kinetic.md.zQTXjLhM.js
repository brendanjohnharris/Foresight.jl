import{_ as i,C as d,c as s,o as a,j as o,aA as n,G as c,a as r,w as l}from"./chunks/framework.QpvAnQd7.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"reference/kinetic.md","filePath":"reference/kinetic.md","lastUpdated":null}'),p={name:"reference/kinetic.md"},g={class:"jldocstring custom-block",open:""};function h(m,e,u,b,k,f){const t=d("Badge");return a(),s("div",null,[o("details",g,[o("summary",null,[e[0]||(e[0]=o("a",{id:"Foresight.kinetic",href:"#Foresight.kinetic"},[o("span",{class:"jlbinding"},"Foresight.kinetic")],-1)),e[1]||(e[1]=r()),c(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[3]||(e[3]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kinetic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots a line with a varying width.</p><p><strong>Key attribtues:</strong></p><p><code>linewidth</code> = <code>:curv</code>:</p><p>Sets the algorithm for determining the line width.</p><ul><li><p><code>:curv</code> - Width is determined by the velocity</p></li><li><p><code>:x</code> - Width is determined by the x-coordinate</p></li><li><p><code>:y</code> - Width is determined by the y-coordinate</p></li><li><p><code>&lt;: Number</code> - Width is set to a constant value</p></li></ul><p><code>linewidthscale</code> = <code>1</code>: Scale factor for the line width.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>kinetic</code> function is <code>Kinetic</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in plot(alpha=0.2, color=(:red, 0.5), will get multiplied.</p><p><strong><code>bandwidth</code></strong> = <code>automatic</code> — Kernel density bandwidth, determined automatically if <code>automatic</code>.</p><p><strong><code>boundary</code></strong> = <code>automatic</code> — Boundary of the density estimation, determined automatically if <code>automatic</code>.</p><p><strong><code>color</code></strong> = <code>@inherit linecolor</code> — <em>No docs available.</em></p><p><strong><code>colormap</code></strong> = <code>@inherit colormap</code> — <em>No docs available.</em></p><p><strong><code>colorrange</code></strong> = <code>Makie.automatic</code> — <em>No docs available.</em></p><p><strong><code>colorscale</code></strong> = <code>identity</code> — <em>No docs available.</em></p><p><strong><code>cycle</code></strong> = <code>:color</code> — <em>No docs available.</em></p><p><strong><code>direction</code></strong> = <code>:x</code> — The dimension along which the <code>values</code> are distributed. Can be <code>:x</code> or <code>:y</code>.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — <em>No docs available.</em></p><p><strong><code>linestyle</code></strong> = <code>nothing</code> — <em>No docs available.</em></p><p><strong><code>linewidth</code></strong> = <code>:curv</code> — <em>No docs available.</em></p><p><strong><code>linewidthscale</code></strong> = <code>1</code> — <em>No docs available.</em></p><p><strong><code>npoints</code></strong> = <code>200</code> — The resolution of the estimated curve along the dimension set in <code>direction</code>.</p><p><strong><code>offset</code></strong> = <code>0.0</code> — Shift the density baseline, for layering multiple densities on top of each other.</p><p><strong><code>strokearound</code></strong> = <code>false</code> — <em>No docs available.</em></p><p><strong><code>strokecolor</code></strong> = <code>@inherit patchstrokecolor</code> — <em>No docs available.</em></p><p><strong><code>strokewidth</code></strong> = <code>@inherit patchstrokewidth</code> — <em>No docs available.</em></p><p><strong><code>visible</code></strong> = <code>true</code> — <em>No docs available.</em></p><p><strong><code>weights</code></strong> = <code>automatic</code> — Assign a vector of statistical weights to <code>values</code>.</p>',30)),c(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[2]||(e[2]=[o("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/v0.24.4/src/recipes.jl#L527-L592",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[2]})])])}const _=i(p,[["render",h]]);export{y as __pageData,_ as default};
