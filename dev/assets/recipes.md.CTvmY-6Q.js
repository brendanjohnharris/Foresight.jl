import{_ as h,C as p,c as r,o as k,aA as a,j as i,G as e,a as l,w as n}from"./chunks/framework.Dsaa6BLQ.js";const o="/Foresight.jl/dev/assets/hlctifi.Dl0AYl9V.png",d="/Foresight.jl/dev/assets/asehtlj.vzKXmieI.png",g="/Foresight.jl/dev/assets/bjtjcdt.CiLfRpMl.png",c="/Foresight.jl/dev/assets/kcwsmgs.BzMf2C_h.png",E="/Foresight.jl/dev/assets/rybpzqa.IOIppVkN.png",y="/Foresight.jl/dev/assets/dpxtlnq.CgjxAgl_.png",u="/Foresight.jl/dev/assets/lihrfuo.CVct51EX.png",S=JSON.parse('{"title":"Recipes","description":"","frontmatter":{},"headers":[],"relativePath":"recipes.md","filePath":"recipes.md","lastUpdated":null}'),F={name:"recipes.md"},C={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""};function A(j,s,x,B,D,P){const t=p("Badge");return k(),r("div",null,[s[28]||(s[28]=a('<h1 id="Recipes" tabindex="-1">Recipes <a class="header-anchor" href="#Recipes" aria-label="Permalink to &quot;Recipes {#Recipes}&quot;">​</a></h1><h2 id="ziggurat@ref" tabindex="-1"><a href="/Foresight.jl/dev/reference/ziggurat#Foresight.ziggurat">ziggurat</a> <a class="header-anchor" href="#ziggurat@ref" aria-label="Permalink to &quot;[ziggurat](/reference/ziggurat#Foresight.ziggurat) {#ziggurat@ref}&quot;">​</a></h2>',2)),i("details",C,[i("summary",null,[s[0]||(s[0]=i("a",{id:"Foresight.ziggurat-recipes",href:"#Foresight.ziggurat-recipes"},[i("span",{class:"jlbinding"},"Foresight.ziggurat")],-1)),s[1]||(s[1]=l()),e(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[3]||(s[3]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ziggurat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots a histogram with a transparent fill.</p><p><strong>Key attributes:</strong></p><p><code>linecolor</code> = <code>automatic</code>: Sets the color of the step outline.</p><p><code>color</code> = <code>@inherit patchcolor</code>: Color of the interior fill.</p><p><code>fillalpha</code> = <code>0.5</code>: Transparency of the interior fill.</p><p><code>filternan</code> = <code>true</code>: Whether to remove NaN values from the data before plotting.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>ziggurat</code> function is <code>Ziggurat</code>.</p>',9)),e(t,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...s[2]||(s[2]=[i("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/v0.24.6/src/recipes.jl#L527-L645",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s[29]||(s[29]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> randn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ziggurat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span></code></pre></div><p><img src="`+o+'" alt="" width="600px" height="450px"></p><h2 id="hill@ref" tabindex="-1"><a href="/Foresight.jl/dev/reference/hill#Foresight.hill">hill</a> <a class="header-anchor" href="#hill@ref" aria-label="Permalink to &quot;[hill](/reference/hill#Foresight.hill) {#hill@ref}&quot;">​</a></h2>',3)),i("details",b,[i("summary",null,[s[4]||(s[4]=i("a",{id:"Foresight.hill-recipes",href:"#Foresight.hill-recipes"},[i("span",{class:"jlbinding"},"Foresight.hill")],-1)),s[5]||(s[5]=l()),e(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[7]||(s[7]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hill</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots a density with a transparent fill.</p><p><strong>Key attributes:</strong></p><p><code>color</code> = <code>@inherit patchcolor</code>: Color of the interior fill.</p><p><code>fillalpha</code> = <code>0.5</code>: Transparency of the interior fill.</p><p><code>filternan</code> = <code>true</code>: Whether to remove NaN values from the data before plotting.</p><p><code>strokecolor</code> = <code>automatic</code>: Color of the outline stroke.</p><p><code>strokewidth</code> = <code>1</code>: Width of the outline stroke.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>hill</code> function is <code>Hill</code>.</p>',10)),e(t,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...s[6]||(s[6]=[i("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/v0.24.6/src/recipes.jl#L527-L591",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s[30]||(s[30]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> randn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hill</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span></code></pre></div><p><img src="`+d+'" alt="" width="600px" height="450px"></p><h2 id="bandwidth@ref" tabindex="-1"><a href="/Foresight.jl/dev/reference/bandwidth#Foresight.bandwidth">bandwidth</a> <a class="header-anchor" href="#bandwidth@ref" aria-label="Permalink to &quot;[bandwidth](/reference/bandwidth#Foresight.bandwidth) {#bandwidth@ref}&quot;">​</a></h2>',3)),i("details",f,[i("summary",null,[s[8]||(s[8]=i("a",{id:"Foresight.bandwidth-recipes",href:"#Foresight.bandwidth-recipes"},[i("span",{class:"jlbinding"},"Foresight.bandwidth")],-1)),s[9]||(s[9]=l()),e(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[11]||(s[11]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bandwidth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots a band of a certain width about a center line.</p><p><strong>Key attributes:</strong></p><p><code>bandwidth</code> = <code>1</code>: Vertical width of the band in data space. Can be a vector of <code>length(x)</code>.</p><p><code>direction</code> = <code>:x</code>: The direction of the band, either <code>:x</code> or <code>:y</code>.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>bandwidth</code> function is <code>Bandwidth</code>.</p>',7)),e(t,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...s[10]||(s[10]=[i("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/v0.24.6/src/recipes.jl#L527-L628",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s[31]||(s[31]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">π</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">π</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bandwidth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(x); bandwidth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(x))</span></span></code></pre></div><p><img src="`+g+'" alt="" width="600px" height="450px"></p><h2 id="polarhist@ref" tabindex="-1"><a href="/Foresight.jl/dev/reference/polarhist#Foresight.polarhist">polarhist</a> <a class="header-anchor" href="#polarhist@ref" aria-label="Permalink to &quot;[polarhist](/reference/polarhist#Foresight.polarhist) {#polarhist@ref}&quot;">​</a></h2>',3)),i("details",_,[i("summary",null,[s[12]||(s[12]=i("a",{id:"Foresight.polarhist-recipes",href:"#Foresight.polarhist-recipes"},[i("span",{class:"jlbinding"},"Foresight.polarhist")],-1)),s[13]||(s[13]=l()),e(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[15]||(s[15]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">polarhist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots a polar histogram of the values in <code>x</code>. Attributes are shared with <code>Makie.Hist</code> and <code>Makie.Poly</code>.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>polarhist</code> function is <code>PolarHist</code>.</p>',4)),e(t,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...s[14]||(s[14]=[i("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/v0.24.6/src/recipes.jl#L527-L628",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s[32]||(s[32]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">polarhist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">randn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><img src="'+c+'" alt="" width="600px" height="450px"></p><h2 id="polardensity@ref" tabindex="-1"><a href="/Foresight.jl/dev/reference/polardensity#Foresight.polardensity">polardensity</a> <a class="header-anchor" href="#polardensity@ref" aria-label="Permalink to &quot;[polardensity](/reference/polardensity#Foresight.polardensity) {#polardensity@ref}&quot;">​</a></h2>',3)),i("details",m,[i("summary",null,[s[16]||(s[16]=i("a",{id:"Foresight.polardensity-recipes",href:"#Foresight.polardensity-recipes"},[i("span",{class:"jlbinding"},"Foresight.polardensity")],-1)),s[17]||(s[17]=l()),e(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[19]||(s[19]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">polardensity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots a polar density plot of the values in <code>x</code>.</p><p><strong>Key attributes:</strong></p><p><code>bandwidth</code> = <code>default_bandwidth_circular(x)</code>: The bandwidth of the kernel density estimate.</p><p><code>strokecolor</code> = <code>:density</code>:</p><p>Sets the color of the stroke around the density band. Can be a color, or one of the following color modes:</p><ul><li><p><code>:density</code> uses the density values as the color.</p></li><li><p><code>:angle</code> or <code>:phase</code> uses the angle of the values as the color.</p></li><li><p><code>:transparent</code> uses a transparent color.</p></li></ul><p><strong>Plot type</strong></p><p>The plot type alias for the <code>polardensity</code> function is <code>PolarDensity</code>.</p>',9)),e(t,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...s[18]||(s[18]=[i("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/v0.24.6/src/recipes.jl#L527-L664",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s[33]||(s[33]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">polardensity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">randn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                 strokewidth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                 strokecolor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :angle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                 strokecolormap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cyclic,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                 colormap</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:viridis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><img src="`+E+'" alt="" width="600px" height="450px"></p><h2 id="covellipse@ref" tabindex="-1"><a href="/Foresight.jl/dev/reference/covellipse#Foresight.covellipse">covellipse</a> <a class="header-anchor" href="#covellipse@ref" aria-label="Permalink to &quot;[covellipse](/reference/covellipse#Foresight.covellipse) {#covellipse@ref}&quot;">​</a></h2>',3)),i("details",v,[i("summary",null,[s[20]||(s[20]=i("a",{id:"Foresight.covellipse-recipes",href:"#Foresight.covellipse-recipes"},[i("span",{class:"jlbinding"},"Foresight.covellipse")],-1)),s[21]||(s[21]=l()),e(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[23]||(s[23]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">covellipse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(μ, Σ²; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots an ellipse representing a multivariate normal distribution with mean <code>μ</code> and covariance matrix <code>Σ²</code>.</p><p><strong>Key attributes:</strong></p><p><code>scale</code> = <code>2</code>: The scale factor for the ellipse size, in units of standard deviation.</p><p><code>vertices</code> = <code>1000</code>: The number of vertices to use for the ellipse, or a list of angular vertices.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>covellipse</code> function is <code>CovEllipse</code>.</p>',7)),e(t,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...s[22]||(s[22]=[i("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/v0.24.6/src/recipes.jl#L527-L628",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s[34]||(s[34]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> randn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">μ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xy, dims </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Σ² </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> cov</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xy)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig, ax, plt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> covellipse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(μ, Σ²)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scatter!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, xy)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig</span></span></code></pre></div><p><img src="`+y+'" alt="" width="600px" height="450px"></p><h2 id="prism" tabindex="-1">prism <a class="header-anchor" href="#prism" aria-label="Permalink to &quot;prism {#prism}&quot;">​</a></h2>',3)),i("details",T,[i("summary",null,[s[24]||(s[24]=i("a",{id:"Foresight.prism-recipes",href:"#Foresight.prism-recipes"},[i("span",{class:"jlbinding"},"Foresight.prism")],-1)),s[25]||(s[25]=l()),e(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[27]||(s[27]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">prism</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, Y; [palette</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:cornflowerblue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:crimson</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:cucumber</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], colormode</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:top</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, verbose</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.])</span></span></code></pre></div><p>Color a covariance matrix each element&#39;s contribution to each of the top <code>k</code> principal components, where <code>k</code> is the length of the supplied color palette (defaults to the number of principal component weights given). Provide as positional arguments a vector <code>x</code> of N row names and an N×N covariance matrix <code>Y</code>.</p><p><strong>Keyword Arguments</strong></p><ul><li><p><code>palette</code>: a vector containing a color for each principal component.</p></li><li><p><code>colormode</code>: how to color the covariance matrix. <code>:raw</code> gives no coloring by principal components, <code>:top</code> is a combination of the top three PC colors (default) and <code>:all</code> is a combination of all PC colors, where PCN = :black if N &gt; length(palette).</p></li><li><p><code>verbose</code>: whether to print the feature weights to the console</p></li></ul>',4)),e(t,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...s[26]||(s[26]=[i("a",{href:"https://github.com/brendanjohnharris/Foresight.jl/blob/83de0c263b213c56230d88fbaa90572583206c5e/src/Prism.jl#L21-L30",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s[35]||(s[35]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ys </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.((</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.001</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">π</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2π</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Σ² </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> cov</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ys </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> randn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ys)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">./</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; dims </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">H </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> prism</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Σ²; palette </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [cornflowerblue, crimson]) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Generates the prism colors</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">f </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Figure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">limits </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">maximum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">abs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(Σ²))) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># You must set the limits manually</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g, ax </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> prismplot!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], H; limits, colorbarlabel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Covariance magnitude&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">axislegend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            [</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                PolyElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (cornflowerblue, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                PolyElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (crimson, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;PC 1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;PC 2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], position </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :lt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xlabel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ylabel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Variable&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">f</span></span></code></pre></div><p><img src="`+u+'" alt="" width="600px" height="450px"></p>',2))])}const V=h(F,[["render",A]]);export{S as __pageData,V as default};
