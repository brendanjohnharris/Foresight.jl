import{_ as d,C as s,c as a,o as i,j as o,aA as r,G as c,a as l,w as n}from"./chunks/framework.Dsaa6BLQ.js";const v=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"reference/hill.md","filePath":"reference/hill.md","lastUpdated":null}'),p={name:"reference/hill.md"},h={class:"jldocstring custom-block",open:""};function g(m,e,u,f,b,k){const t=s("Badge");return i(),a("div",null,[o("details",h,[o("summary",null,[e[0]||(e[0]=o("a",{id:"Foresight.hill",href:"#Foresight.hill"},[o("span",{class:"jlbinding"},"Foresight.hill")],-1)),e[1]||(e[1]=l()),c(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[3]||(e[3]=r('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hill</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots a density with a transparent fill.</p><p><strong>Key attributes:</strong></p><p><code>color</code> = <code>@inherit patchcolor</code>: Color of the interior fill.</p><p><code>fillalpha</code> = <code>0.5</code>: Transparency of the interior fill.</p><p><code>filternan</code> = <code>true</code>: Whether to remove NaN values from the data before plotting.</p><p><code>strokecolor</code> = <code>automatic</code>: Color of the outline stroke.</p><p><code>strokewidth</code> = <code>1</code>: Width of the outline stroke.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>hill</code> function is <code>Hill</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in plot(alpha=0.2, color=(:red, 0.5), will get multiplied.</p><p><strong><code>bandwidth</code></strong> = <code>automatic</code> — Kernel density bandwidth, determined automatically if <code>automatic</code>.</p><p><strong><code>boundary</code></strong> = <code>automatic</code> — Boundary of the density estimation, determined automatically if <code>automatic</code>.</p><p><strong><code>color</code></strong> = <code>@inherit patchcolor</code> — Color of the density fill</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap</code> — <em>No docs available.</em></p><p><strong><code>colorrange</code></strong> = <code>Makie.automatic</code> — <em>No docs available.</em></p><p><strong><code>colorscale</code></strong> = <code>identity</code> — <em>No docs available.</em></p><p><strong><code>cycle</code></strong> = <code>:color =&gt; :patchcolor</code> — <em>No docs available.</em></p><p><strong><code>direction</code></strong> = <code>:x</code> — The dimension along which the <code>values</code> are distributed. Can be <code>:x</code> or <code>:y</code>.</p><p><strong><code>fillalpha</code></strong> = <code>0.5</code> — Transparency of the fill patch</p><p><strong><code>filternan</code></strong> = <code>true</code> — Whether to remove NaN values</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — <em>No docs available.</em></p><p><strong><code>linestyle</code></strong> = <code>nothing</code> — <em>No docs available.</em></p><p><strong><code>npoints</code></strong> = <code>200</code> — The resolution of the estimated curve along the dimension set in <code>direction</code>.</p><p><strong><code>offset</code></strong> = <code>0.0</code> — Shift the density baseline, for layering multiple densities on top of each other.</p><p><strong><code>strokearound</code></strong> = <code>false</code> — <em>No docs available.</em></p><p><strong><code>strokecolor</code></strong> = <code>automatic</code> — Color of the density stroke</p><p><strong><code>strokewidth</code></strong> = <code>@inherit linewidth</code> — <em>No docs available.</em></p><p><strong><code>visible</code></strong> = <code>true</code> — <em>No docs available.</em></p><p><strong><code>weights</code></strong> = <code>automatic</code> — Assign a vector of statistical weights to <code>values</code>.</p>',31)),c(t,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[2]||(e[2]=[o("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/v0.24.6/src/recipes.jl#L527-L591",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const _=d(p,[["render",g]]);export{v as __pageData,_ as default};
