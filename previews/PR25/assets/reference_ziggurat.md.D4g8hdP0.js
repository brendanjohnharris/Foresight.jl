import{_ as i,C as d,c as r,o as l,j as o,aA as a,G as s,a as n,w as c}from"./chunks/framework.Bur-k5uE.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"reference/ziggurat.md","filePath":"reference/ziggurat.md","lastUpdated":null}'),p={name:"reference/ziggurat.md"},h={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""};function u(m,e,f,b,y,k){const t=d("Badge");return l(),r("div",null,[o("details",h,[o("summary",null,[e[0]||(e[0]=o("a",{id:"Foresight.ziggurat",href:"#Foresight.ziggurat"},[o("span",{class:"jlbinding"},"Foresight.ziggurat")],-1)),e[1]||(e[1]=n()),s(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[3]||(e[3]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ziggurat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots a histogram with a transparent fill.</p><p><strong>Key attributes:</strong></p><p><code>linecolor</code> = <code>automatic</code>: Sets the color of the step outline.</p><p><code>color</code> = <code>@inherit patchcolor</code>: Color of the interior fill.</p><p><code>fillalpha</code> = <code>0.5</code>: Transparency of the interior fill.</p><p><code>filternan</code> = <code>true</code>: Whether to remove NaN values from the data before plotting.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>ziggurat</code> function is <code>Ziggurat</code>.</p><p><strong>Attributes</strong></p><p><strong><code>bar_labels</code></strong> = <code>nothing</code> — <em>No docs available.</em></p><p><strong><code>bins</code></strong> = <code>15</code> — Can be an <code>Int</code> to create that number of equal-width bins over the range of <code>values</code>. Alternatively, it can be a sorted iterable of bin edges.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>@inherit patchcolor</code> — Color of the histogram fill</p><p><strong><code>cycle</code></strong> = <code>:color =&gt; :patchcolor</code> — <em>No docs available.</em></p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>direction</code></strong> = <code>:y</code> — Set the direction of the bars.</p><p><strong><code>fillalpha</code></strong> = <code>0.5</code> — Transparency of the histogram fill</p><p><strong><code>fillto</code></strong> = <code>automatic</code> — Defines where the bars start.</p><p><strong><code>filternan</code></strong> = <code>true</code> — Whether to remove NaN values</p><p><strong><code>flip_labels_at</code></strong> = <code>Inf</code> — <em>No docs available.</em></p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>gap</code></strong> = <code>0</code> — Gap between the bars (see barplot).</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>label_color</code></strong> = <code>@inherit textcolor</code> — <em>No docs available.</em></p><p><strong><code>label_font</code></strong> = <code>@inherit font</code> — <em>No docs available.</em></p><p><strong><code>label_formatter</code></strong> = <code>bar_label_formatter</code> — <em>No docs available.</em></p><p><strong><code>label_offset</code></strong> = <code>5</code> — <em>No docs available.</em></p><p><strong><code>label_size</code></strong> = <code>20</code> — <em>No docs available.</em></p><p><strong><code>linecolor</code></strong> = <code>automatic</code> — Color of the histogram steps</p><p><strong><code>linestyle</code></strong> = <code>:solid</code> — <em>No docs available.</em></p><p><strong><code>linewidth</code></strong> = <code>@inherit linewidth</code> — <em>No docs available.</em></p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>normalization</code></strong> = <code>:none</code> — Allows to normalize the histogram. Possible values are:</p><ul><li><p><code>:pdf</code>: Normalize by sum of weights and bin sizes. Resulting histogram has norm 1 and represents a PDF.</p></li><li><p><code>:density</code>: Normalize by bin sizes only. Resulting histogram represents count density of input and does not have norm 1. Will not modify the histogram if it already represents a density (<code>h.isdensity == 1</code>).</p></li><li><p><code>:probability</code>: Normalize by sum of weights only. Resulting histogram represents the fraction of probability mass for each bin and does not have norm 1.</p></li><li><p><code>:none</code>: Do not normalize.</p></li></ul><p><strong><code>offset</code></strong> = <code>0.0</code> — Adds an offset to every value.</p><p><strong><code>over_background_color</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>over_bar_color</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>scale_to</code></strong> = <code>nothing</code> — Allows to scale all values to a certain height. This can also be set to <code>:flip</code> to flip the direction of histogram bars without scaling them to a common height.</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>strokecolor</code></strong> = <code>@inherit patchstrokecolor</code> — <em>No docs available.</em></p><p><strong><code>strokewidth</code></strong> = <code>@inherit patchstrokewidth</code> — <em>No docs available.</em></p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p><p><strong><code>weights</code></strong> = <code>automatic</code> — Allows to statistically weight the observations.</p>',51)),s(t,{type:"info",class:"source-link",text:"source"},{default:c(()=>e[2]||(e[2]=[o("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/v0.24.5/src/recipes.jl#L527-L645",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[2]})]),o("details",g,[o("summary",null,[e[4]||(e[4]=o("a",{id:"Makie.Linestyle",href:"#Makie.Linestyle"},[o("span",{class:"jlbinding"},"Makie.Linestyle")],-1)),e[5]||(e[5]=n()),s(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[7]||(e[7]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Linestyle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{&lt;:Real}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A type that can be used as value for the <code>linestyle</code> keyword argument of plotting functions to arbitrarily customize the linestyle.</p><p>The <code>value</code> is a vector specifying the boundaries of the dashes in the line. Values 1 and 2 demarcate the first dash, values 2 and 3 the first gap, and so on. This means that usually, a pattern should have an odd number of values so that there&#39;s always a gap after a dash.</p><p>Here&#39;s an example in ASCII code. If we specify <code>[0, 3, 6, 11, 16]</code> then we get the following pattern:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>#  0  3   6   11   16  3  6   11</span></span>
<span class="line"><span>#   ---   -----     ---   -----</span></span></code></pre></div>`,5)),s(t,{type:"info",class:"source-link",text:"source"},{default:c(()=>e[6]||(e[6]=[o("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/v0.24.5/src/conversions.jl#L1165-L1183",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[6]})])])}const w=i(p,[["render",u]]);export{_ as __pageData,w as default};
